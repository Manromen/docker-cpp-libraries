# ----------------------------------------------------------------------------------------------------------------------
# The MIT License (MIT)
#
# Copyright (c) 2017 Ralph-Gordon Paul. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# ----------------------------------------------------------------------------------------------------------------------

FROM alpine:3.7
MAINTAINER Ralph-Gordon Paul <gordon@rgpaul.com>

RUN apk update

# set timezone to germany (Europe/Berlin)
RUN apk add --no-cache tzdata \
  && cp /usr/share/zoneinfo/Europe/Berlin /etc/localtime \
  && apk del tzdata

# install bash / curl
RUN apk add --no-cache bash curl ca-certificates 

# install some dependencies
RUN apk add alpine-sdk build-base 
RUN apk add cmake 
RUN apk add autoconf automake m4 libtool 
RUN apk add git nano groff
RUN apk add curl-dev icu-dev bzip2-dev zlib-dev 
RUN apk add linux-headers
RUN apk add musl-dev

# add local library path
RUN ldconfig "/usr/local/lib"

WORKDIR /root

# copy and set entrypoint
COPY ./docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["install"]

# copy dependency install scripts
COPY ./deps /root/deps

# copy prebuild libraries
COPY ./prebuild-deps/include /usr/local/include
COPY ./prebuild-deps/lib /usr/local/lib

### set all dependencies you want compiled/installed to TRUE ###

# AWS SDK for C++ - https://github.com/aws/aws-sdk-cpp
# requires LibreSSL / OpenSSL
ENV INSTALL_AWS_SDK=TRUE

# Boost Library - http://www.boost.org
ENV INSTALL_BOOST=TRUE

# Niels Lohmann JSON for Modern C++ - https://github.com/nlohmann/json
ENV INSTALL_NLOHMANN_JSON=TRUE

# LibreSSL - https://www.libressl.org
# either LibreSSL or OpenSSL can be installed 
ENV INSTALL_LIBRESSL=TRUE

# OpenSSL - https://www.openssl.org
# either LibreSSL or OpenSSL can be installed
ENV INSTALL_OPENSSL=FALSE

# OpenLDAP - http://www.openldap.org
# requires LibreSSL / OpenSSL
ENV INSTALL_OPENLDAP=TRUE

# MySQL C-Connector - https://dev.mysql.com/downloads/connector/c/
ENV INSTALL_MYSQLCLIENT=TRUE

# SQLite 3 - https://sqlite.org
ENV INSTALL_SQLITE3=TRUE

# SOCI - https://github.com/SOCI/soci
# requires Boost and MySQL C-Connector and/or SQLite3
ENV INSTALL_SOCI=TRUE

# C++ REST SDK - https://github.com/Microsoft/cpprestsdk
# requires Boost / LibreSSL or OpenSSL
ENV INSTALL_CPP_REST_SDK=TRUE

# Crypto++ Library - https://cryptopp.com
ENV INSTALL_CRYPTOPP=TRUE

# plustache - {{mustaches}} for C++ - https://github.com/mrtazz/plustache
ENV INSTALL_PLUSTACHE=TRUE

# nats Library for C - https://github.com/nats-io/cnats
# requires OpenSSL / LibreSSL
ENV INSTALL_CNATS=TRUE

